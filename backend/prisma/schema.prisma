// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  email     String
  hash      String
  // username  String @unique
  avatarUrl String?

  messages  Message[]

  owner   Channel[] @relation("owner")
  admins  Channel[] @relation("admins")
  members Channel[] @relation("members")
  muted   Channel[] @relation("muted")
  banned  Channel[] @relation("banned")
  
  friends Friend[]  @relation("friend")
  blocked Blocked[] @relation("blocked")

  @@map("users")
  @@unique([id, email])
}

model Friend {
  createdAt DateTime  @default(now())

  friend    User @relation("friend", fields: [friendId], references: [id], onDelete: Cascade)
  friendId  Int

  @@id([friendId])
}

model Blocked {
  createdAt DateTime  @default(now())

  blocked    User @relation("blocked", fields: [blockedId], references: [id], onDelete: Cascade)
  blockedId  Int

  @@id([blockedId])
}

model Message {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())

  message     String

  owner       User       @relation(fields: [userId], references: [id])
  userId      Int
  channel     Channel    @relation(fields: [channelId], references: [id])
  channelId   Int
}

model Channel {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  channelName String
  password    String?

  isPassword Boolean   @default(false)
  isDM       Boolean   @default(false)

  messages   Message[]

  owner     User[]    @relation("owner")
  admins    User[]    @relation("admins")
  members   User[]    @relation("members")
  banned    User[]    @relation("banned")
  muted     User[]    @relation("muted")

  @@unique([id])
}
